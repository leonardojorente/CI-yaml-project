# nome da pipeline
name: 'playwright report deploy pages'

#regras de disparo(triggers)
on:
  #gatilho de execucao a partir de outro pipe: workflow_dispatch
  workflow_dispatch:

# trabalhos e tarefas dentor do pipeline: jobs
jobs:
  e2e-tests:
    # available images https://github.com/actions/runner-images
    # maquina que o job vai executar
    runs-on: ubuntu-latest

    #passos do script de build
    steps:
      #clone do projeto
      - uses: actions/checkout@v4

      #instalacao do node
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x

      #instalacao do yarn
      - name: Instalacao do Yarn
        run: npm install -g yarn

      #instalacao das dependencias
      - name: Instalacao das dependencias
        run: yarn

      #instalacao do playwright
      - name: Instalacao do playwright
        run: yarn playwright install

      #executar os testes E2E
      - name: Executando testes e2e
        run: yarn run e2e

      - uses: actions/upload-artifact@v4 # upload test results
        if: ${{ always() }}
        with:
          name: test-results
          path: playwright-report/

  # Deploy to GitHub Pages
  #https://github.com/actions/deploy-pages
  #https://github.com/leonardojorente/CI-yaml-project/settings/pages -> enable pages on github
  deploy-to-gh-pages:
    needs: e2e-tests
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download Report Artifact
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: playwright-report